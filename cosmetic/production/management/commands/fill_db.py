import random

from django.core import management
from django.core.management.base import BaseCommand
from production.models import *
from .utils import random_date, random_timedelta


def add_substances():
    Substance.objects.create(
        name="4-терт-бутил циклогексанол",
        description="Он является инновационным синтетическим соединением с выраженной противовоспалительной активностью. Ощущения зуда и дискомфорта на коже ассоциировано с активностью терморецептора TRPV1, именно этот рецептор активируется капсаицином – активным веществом красного перца. Не так давно был открыт селективный ингибитор рецептора TRPV1 – 4-терт-бутилциклогексанол, он избирательно отключает этот рецептор и таким образом блокирует проявления воспалительной реакции. За счет этого снимает зуд, раздражение и покраснение. Растворим в маслах, эмолентах, пропиленгликоле. Нерастворим в воде. Можно вводить в масляную фазу до эмульгирования, или в готовую эмульсию.",
    )
    Substance.objects.create(
        name="Massocare",
        description="'Жидкий неионногенный ПАВ для гидрофильных масел, со-эмульгатор для эмульсий вода-в-масле. Разработан для гидрофильных масел для тела и душа, мягких очищающих средств, скрабов, массажных средств и др. на масляной основе. Обеспечивает легкое смывание средства с кожи. При нанесени на влажные руки или при смешении с водой образуется эмульсия, которая удаляет загрязения без эффекта липкости и жирности на коже. Процент ввода: от 5 до 10%. Совместим с синтетическими и с натуральными маслами.",
    )
    Substance.objects.create(
        name="Protein HPTW",
        description="Гидролизованные протеины пшеницы обладают сродством к кератину из которого состоит волос. За счет этого они обладают кондиционирующим эффектом, восполняют повреждения в структуре волоса и укрепляют его. Снижают раздражающее действие детергентов на кожу скальпа в шампунях. Химическая модификация четвертичными аммониевым соединением (гидроксипропилтримониум) придает протеинам лучшие кондиционирующие свойства и увеличивает их сродство к кератину волос. Таким образом, модифицированные протеины обладают всеми полезными свойствами гидролизованных протеинов, но в усиленной форме. Растворимы в воде. Нерастворимы в маслах и эмолентах. Устойчивы к нагреванию. Можно вводить в водную фазу, или в готовый продукт. Область применения: шампуни, бальзамы-ополаскиватели, маски для волос, сыворотки для волос",
    )
    Substance.objects.create(
        name="Ацетил тетрапептид-40",
        description="Ацетил тетрапептид-40 обладает противовоспалительным эффектом за счет уменьшения продукции интерлейкина-6 и интерлейкина-8 (медиаторы воспаления) и ингибирования высвобождения пептида LL-37 (сигнальный пептид – вызывает расширение капилляров и ингибирует продукцию коллагена). За счет этого уменьшает проявление эритемы и борется с розацеа. Также ацетил тетрапептид-40 ингибирует металлопротеиназы (участвуют в разрушении коллагена) и блокирует меланогенез за счет снижения активности тирозиназы. Подходит для чувствительной кожи, кожи с розацеа. Вводится в готовый остывший продукт в виде раствора с концентрацией 1000 ppm. Нагрев нежелателен. Нежелательно совмещать с протеазами.",
    )
    Substance.objects.create(
        name="Гидроксипинаколона ретиноат",
        description="Гидроксипинаколона ретиноат – одна из наиболее современных форм ретиноидов. Это сложный эфир ретиноевой кислоты, который под действием клеточных ферментов липаз переходит в активную форму ретиноевой кислоты. Наиболее близок по эффекту к ретиноевой кислоте при минимальном количестве побочных эффектов – значительно меньше раздражение кожи. Не растворяется в воде, растворяется в маслах, солюбилизаторах, эмолентах, спиртах, диметилизосорбиде. Вводится в готовую эмульсию. Требуется введение антиоксидантов. Готовый продукт должен быть в непрозрачной таре.",
    )
    Substance.objects.create(
        name="Protein VEG",
        description="Гидролизованные растительные протеины обладают сродством к кератину из которого состоит волос. За счет этого они обладают кондиционирующим эффектом, восполняют повреждения в структуре волоса и укрепляют его. Снижают раздражающее действие детергентов на кожу скальпа в шампунях. Химическая модификация силиконом придает протеинам лучшие кондиционирующие свойства, увеличивает их сродство к кератину волос, придает дополнительные сенсорные свойства. При этом в отличие от классических силиконов типа амодиметикона не происходит утяжеления волоса. Растворимы в воде. Нерастворимы в маслах и эмолентах. Устойчивы к нагреванию. Можно вводить в водную фазу, или в готовый продукт.",
    )
    Substance.objects.create(
        name="Тетрабутан",
        description="Технологичный акрилатный эмульгатор и загуститель. Подходит для производства крем-флюида, лосьона, крема средней плотности, сыворотки на эмульсионной основе. В качестве со-эмульгатора стабилизирует структуру крема и увеличивает вязкость.",
    )

    print("Услуги добавлены")


def add_cosmetics():
    owners = User.objects.filter(is_superuser=False)
    moderators = User.objects.filter(is_superuser=True)

    if len(owners) == 0 or len(moderators) == 0:
        print("Заявки не могут быть добавлены. Сначала добавьте пользователей с помощью команды add_users")
        return

    substances = Substance.objects.all()

    for _ in range(30):
        cosmetic = Cosmetic.objects.create()
        cosmetic.name = "Косметика №" + str(cosmetic.pk)
        cosmetic.status = random.randint(2, 5)

        if cosmetic.status in [3, 4]:
            cosmetic.closed_date = random_date()
            cosmetic.formated_date = cosmetic.closed_date - random_timedelta()
            cosmetic.created_date = cosmetic.formated_date - random_timedelta()
        else:
            cosmetic.formated_date = random_date()
            cosmetic.created_date = cosmetic.formated_date - random_timedelta()

        cosmetic.owner = random.choice(owners)
        cosmetic.moderator = random.choice(moderators)

        for i in range(random.randint(1, 3)):
            try:
                item = SubCosm.objects.create()
                item.cosmetic = cosmetic
                item.substance = random.choice(substances)
                item.save()
            except Exception as e:
                print(e)

        cosmetic.save()

    print("Заявки добавлены")


class Command(BaseCommand):
    def handle(self, *args, **kwargs):
        management.call_command("clean_db")

        add_substances()
        add_cosmetics()









