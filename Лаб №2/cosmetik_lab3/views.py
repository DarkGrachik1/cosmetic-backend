from django.http import HttpResponse
from django.shortcuts import render
from django.db.models import Q
from datetime import date
from cosmetik_lab3.models import *
from django.shortcuts import redirect
from django.apps import apps 
# def hello(request):
#     return render(request, 'index.html', { 'data' : {
#         'current_date': date.today(),
#         'list': ['python', 'django', 'html']
#     }})

import psycopg2
conn = psycopg2.connect(dbname="cosmetic", host="localhost", user="asya", password="asya", port="5432")
cursor = conn.cursor()
# cursor.execute("INSERT INTO public.users (user_id, login, password, access) VALUES(1, 'grach', '1234',True)")
conn.commit()   # реальное выполнение команд sql1
cursor.close()
conn.close()

SubstansesData = {
    'substanse': [
        {
            'id': 0,
            'title': '4-терт-бутил циклогексанол',
            'text': 'Он является инновационным синтетическим соединением с выраженной противовоспалительной активностью.',
            'image': '4tertbutil.png',
            'price': '8,40',
            'desc': 'Ощущения зуда и дискомфорта на коже ассоциировано с активностью терморецептора TRPV1, именно этот рецептор активируется капсаицином – активным веществом красного перца. Не так давно был открыт селективный ингибитор рецептора TRPV1 – 4-терт-бутилциклогексанол, он избирательно отключает этот рецептор и таким образом блокирует проявления воспалительной реакции. За счет этого снимает зуд, раздражение и покраснение. Растворим в маслах, эмолентах, пропиленгликоле. Нерастворим в воде. Можно вводить в масляную фазу до эмульгирования, или в готовую эмульсию. Процент ввода: Сыворотки и крема: 0,1-0,5%'
        },
        {
            'id': 1,
            'title': 'Massocare',
            'text': 'Жидкий неионногенный ПАВ для гидрофильных масел, со-эмульгатор для эмульсий вода-в-масле.',
            'image': 'massocare.png',
            'price': '2,40',
            'desc': 'Разработан для гидрофильных масел для тела и душа, мягких очищающих средств, скрабов, массажных средств и др. на масляной основе. Обеспечивает легкое смывание средства с кожи. При нанесени на влажные руки или при смешении с водой образуется эмульсия, которая удаляет загрязения без эффекта липкости и жирности на коже. Процент ввода: от 5 до 10%. Совместим с синтетическими и с натуральными маслами.'
        },
        {
            'id': 2,
            'title': 'Protein HPTW',
            'text': 'Гидролизованные протеины пшеницы обладают сродством к кератину из которого состоит волос.',
            'image': 'protein.png',
            'price': '3,50',
            'desc': 'За счет этого они обладают кондиционирующим эффектом, восполняют повреждения в структуре волоса и укрепляют его. Снижают раздражающее действие детергентов на кожу скальпа в шампунях. Химическая модификация четвертичными аммониевым соединением (гидроксипропилтримониум) придает протеинам лучшие кондиционирующие свойства и увеличивает их сродство к кератину волос. Таким образом, модифицированные протеины обладают всеми полезными свойствами гидролизованных протеинов, но в усиленной форме. Растворимы в воде. Нерастворимы в маслах и эмолентах. Устойчивы к нагреванию. Можно вводить в водную фазу, или в готовый продукт. Область применения: шампуни, бальзамы-ополаскиватели, маски для волос, сыворотки для волос'
        },
        {
            'id': 3,
            'title': 'Ацетил тетрапептид-40',
            'text': 'Ацетил тетрапептид-40 обладает противовоспалительным эффектом.',
            'image': 'acetil.png',
            'price': '16,70',
            'desc': 'Ацетил тетрапептид-40 обладает противовоспалительным эффектом за счет уменьшения продукции интерлейкина-6 и интерлейкина-8 (медиаторы воспаления) и ингибирования высвобождения пептида LL-37 (сигнальный пептид – вызывает расширение капилляров и ингибирует продукцию коллагена). За счет этого уменьшает проявление эритемы и борется с розацеа. Также ацетил тетрапептид-40 ингибирует металлопротеиназы (участвуют в разрушении коллагена) и блокирует меланогенез за счет снижения активности тирозиназы. Подходит для чувствительной кожи, кожи с розацеа. Вводится в готовый остывший продукт в виде раствора с концентрацией 1000 ppm. Нагрев нежелателен. Нежелательно совмещать с протеазами.'
        },
        {
            'id': 4,
            'title': 'Гидроксипинаколона ретиноат',
            'text': 'Гидроксипинаколона ретиноат – одна из наиболее современных форм ретиноидов.',
            'image': 'gydroqipin.png',
            'price': '1270,00',
            'desc': 'Это сложный эфир ретиноевой кислоты, который под действием клеточных ферментов липаз переходит в активную форму ретиноевой кислоты. Наиболее близок по эффекту к ретиноевой кислоте при минимальном количестве побочных эффектов – значительно меньше раздражение кожи. Не растворяется в воде, растворяется в маслах, солюбилизаторах, эмолентах, спиртах, диметилизосорбиде. Вводится в готовую эмульсию. Требуется введение антиоксидантов. Готовый продукт должен быть в непрозрачной таре.'
        },
                {
            'id': 5,
            'title': 'Protein VEG',
            'text': 'Гидролизованные растительные протеины обладают сродством к кератину из которого состоит волос.',
            'image': 'protein2.png',
            'price': '7,70',
            'desc': 'За счет этого они обладают кондиционирующим эффектом, восполняют повреждения в структуре волоса и укрепляют его. Снижают раздражающее действие детергентов на кожу скальпа в шампунях. Химическая модификация силиконом придает протеинам лучшие кондиционирующие свойства, увеличивает их сродство к кератину волос, придает дополнительные сенсорные свойства. При этом в отличие от классических силиконов типа амодиметикона не происходит утяжеления волоса. Растворимы в воде. Нерастворимы в маслах и эмолентах. Устойчивы к нагреванию. Можно вводить в водную фазу, или в готовый продукт.'
        },
                {
            'id': 6,
            'title': 'Тетрабутан',
            'text': 'Технологичный акрилатный эмульгатор и загуститель.',
            'image': 'zagust.png',
            'price': '3,90',
            'desc': 'Подходит для производства крем-флюида, лосьона, крема средней плотности, сыворотки на эмульсионной основе. В качестве со-эмульгатора стабилизирует структуру крема и увеличивает вязкость.'
        },
    ]
}

def GetSubstanses(request):
    substanses = Substance.objects.filter(status=True).order_by('-id')
    query_substances = request.GET.get('query_substances')

    if query_substances:
        # Используйте функцию Q для объединения нескольких условий поиска
        filtered_data = substanses.filter(
            Q(sub_name__icontains=query_substances) )
    else:
        filtered_data = substanses.all()
        query_substances = ""

    return render(request, "substanses.html", {'filtered_data': filtered_data, 'search_value': query_substances})

def GetSubstanse(request, id):
    data_by_id = Substance.objects.filter(status=True).get(id=id) # Берем один объект, находим его по id, которое получили в запросе
    return render(request, "substanse.html", {
        'substanse': data_by_id
    })
   
def delete_substanse(request, id):
    #data_by_id = Services.objects.get(id=process_id).delete() # Удаляем один объект, находим его по id, которое получили в запросе 
    conn = psycopg2.connect(dbname="cosmetic", host="localhost", user="asya", password="asya", port="5432")
    cursor = conn.cursor()
    cursor.execute("UPDATE \"substance\" SET status=\'2' WHERE id = %s", [id]) # посылаем туда SQL запрос
    conn.commit()
    cursor.close()
    conn.close()
    return redirect('substances')




    
# def GetSubstanses(request):
#     query_substances = request.GET.get('query_substances')

#     if query_substances:
#         # Фильтруем данные, учитывая как поле "type", так и поле "price"
#         filtered_data = [it for it in Substanses.objects.all() if
#                          query_substances.lower() in it['title'].lower()]
#     else:
#         filtered_data = Substanses.objects.all()
#         query_substances = ""

#     return render(request, "substanses.html", {'filtered_data': filtered_data, 'search_value': query_substances})


# def GetSubstanse(request, id):
#     data_by_id = SubstansesData.get('substanse')[id]
#     return render(request, "substanse.html", {
#         'substanse': data_by_id
#     })
